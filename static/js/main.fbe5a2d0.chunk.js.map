{"version":3,"sources":["components/MapPageComponents/Marker.js","components/MapPageComponents/Map.js","components/generalComponents/FullImageModal.js","components/generalComponents/ImageThumbnail.js","components/MapPageComponents/MapThumbnailContainer.js","components/MapPage.js","components/PhotoPageComponents/PhotoPageThumbnailContainer.js","components/PhotoPage.js","components/RenderPage.js","components/VideoPageComponents/VideoPlayer.js","components/VideoPageComponents/VideoThumbnail.js","components/VideoPageComponents/VideoThumbnailContainer.js","components/VideoPage.js","components/AboutPage.js","components/layout/Header.js","components/layout/Footer.js","App.js","index.js"],"names":["Marker","s","this","props","isNight","concat","photoSetID","selected","react_default","a","createElement","onClick","markerOnClick","bind","className","styleMarker","PureComponent","Map","nightMapStyle","dayMapStyle","_this","nightMarkers","map","marker","MapPageComponents_Marker","key","lat","lng","dayMarkers","lib_default","bootstrapURLKeys","onGoogleApiLoaded","googleMapLoaded","yesIWantToUseGoogleMapApiInternals","defaultZoom","defaultCenter","options","styles","_setMapStyle","fullscreenControl","mapTypeControl","streetViewControl","_createMarkers","Component","require","FullImageModal","state","loaded","showLoaded","e","target","style","display","setState","open","handleShow","margin","src","process","imgFilePath","alt","description","onLoad","year","ImageThumbnail","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","hover","_handleMouseOver","_handleMouseLeave","thumbnailFilePath","animation","fadeInOrder","toString","float","width","generalComponents_FullImageModal","fileName","photoData","height","verticalAlign","opacity","cursor","transition","onMouseOver","onMouseLeave","MapThumbnailContainer","displayHeaderText","currentPhotoSet","headerStyle","keyCount","_this2","formatted","replace","dir1","dir2","num","photoSetData","numPhotos","list","order","i","push","sort","b","Math","random","generalComponents_ImageThumbnail","photos","filter","photo","filename","photoset","_createThumbnailsHelper","thumbnails","_createThumbnails","id","overflowY","MapPage","shouldToggleLoad","_toggleMapStyle","_markerOnClick","_googleMapLoaded","yes","_btnStyle","_displayBtnText","currentPhotoSetData","photoSet","_loadToggle","MapPageComponents_Map","MapPageComponents_MapThumbnailContainer","PhotoPageThumbnailContainer","_handleNoPhotos","nothingHereStyle","filteredPhotoData","_createThumbnailHelper","indexOf","dirName","match","thumbPath","fullPath","length","color","fontSize","marginTop","marginBottom","textAlign","ImagePage","medVal","colVal","filtersApplied","filters","bwOnly","colorOnly","analogOnly","digitalOnly","genres","street","landscape","cityscape","cyberpunk","composite","_applyFilter","val","currFilters","_clearFilters","_filterPhotoData","data","filteredPhotos","j","isValid","g","genre","analog","bw","_checkFiltersApplied","filtered","keys","forEach","Fragment","PhotoPageComponents_PhotoPageThumbnailContainer","RenderPage","VideoPlayer","nextProps","position","controls","loop","autoPlay","muted","controlsList","type","fileData","VideoThumbnail","_play","player","current","play","_pause","pause","React","createRef","full","onMouseEnter","handleSelection","ref","VideoThumbnailContainer","videoData","video","VideoPageComponents_VideoThumbnail","VideoPage","_handleSelection","newSelection","_parseVideoData","obj","VideoPageComponents_VideoPlayer","VideoPageComponents_VideoThumbnailContainer","AboutPage","Header","pageName","currentPage","link","react_router_dom","to","_handleLinkCSS","_linkText","toUpperCase","slice","_createHeaderLinks","background","padding","Footer","App","basename","react_router","exact","path","render","layout_Header","components_MapPage","PhotoPage","components_RenderPage","renderData","components_VideoPage","components_AboutPage","layout_Footer","Date","getFullYear","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fbe5a2d0.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport './styles/marker.css';\nimport PropTypes from 'prop-types';\n\n//Location Markers for Google Map\nclass Marker extends PureComponent{\n\n  styleMarker() {\n    let s = \"\";\n    if (this.props.isNight){\n      s = s.concat(\"nightMarker\");\n    } else {\n      s = s.concat(\"dayMarker\"); }\n    if (this.props.photoSetID === this.props.selected) {\n      s = s.concat(\" selected\")\n    }\n    return s;\n  }\n\n  render() {\n    return (\n      <div onClick={this.props.markerOnClick.bind(this, this.props.photoSetID)}\n        className={this.styleMarker()}>\n        {this.props.photoSetID}\n      </div>\n    );\n  }\n}\n\n//PropTypes\nMarker.propTypes = {\n  isNight: PropTypes.bool.isRequired,\n  markerOnClick: PropTypes.func.isRequired,\n  selected: PropTypes.string\n}\n\nexport default Marker;\n","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Marker from './Marker';\nimport PropTypes from 'prop-types';\nimport './styles/map.css';\n\nclass Map extends Component {\n\n  _setMapStyle() {\n    return (this.props.isNight ? nightMapStyle : dayMapStyle)\n  }\n\n  _createMarkers() {\n    let isNight = this.props.isNight;\n    if(isNight) {\n       return nightMarkers.map((marker) =>  (\n         <Marker key={marker.photoSetID} lat={marker.lat} lng={marker.lng}\n         isNight={isNight} photoSetID={marker.photoSetID}\n         markerOnClick={this.props.markerOnClick}\n         selected={this.props.selected}/>\n       ));\n     }\n     return dayMarkers.map((marker) =>  (\n       <Marker key={marker.photoSetID} lat={marker.lat} lng={marker.lng}\n       isNight={isNight} photoSetID={marker.photoSetID}\n       markerOnClick={this.props.markerOnClick}\n       selected={this.props.selected}/>\n     ));\n  }\n\n  render () {\n\n    return (\n      <div className=\"mapContainer\">\n        <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyDvYg4RBLbXfa_stM5Ihh3X25ZyGhWepCA' }}\n        onGoogleApiLoaded={this.props.googleMapLoaded.bind(this, true)}\n        yesIWantToUseGoogleMapApiInternals={true}\n        defaultZoom={5}\n        defaultCenter={{ lat: 40.7549, lng: -73.9840}}\n        options={{styles: this._setMapStyle(),\n          fullscreenControl: false}}\n        mapTypeControl={false}\n        streetViewControl={false}>\n          {this._createMarkers()}\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\n//Map Styles\nconst nightMapStyle = require('../../json/mapStyles/nightMapStyle.json');\nconst dayMapStyle = require('../../json/mapStyles/dayMapStyle.json');\n\n//Marker Data\nconst nightMarkers = require('../../json/mapMarkers/NightMarkers.json');\nconst dayMarkers = require('../../json/mapMarkers/DayMarkers.json');\n\nMap.propTypes = {\n  isNight: PropTypes.bool.isRequired,\n  markerOnClick: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  googleMapLoaded: PropTypes.func.isRequired\n}\n\nexport default Map;\n","import React, {PureComponent} from 'react';\nimport './styles/imageThumbnail.css';\nimport PropTypes from 'prop-types';\n\n// Full image display when ImageThumbnail is clicked\nclass FullImageModal extends PureComponent {\n\n  state = {\n    loaded: false\n  }\n\n  showLoaded = (e) => {\n    e.target.style.display = 'block';\n    this.setState({loaded: true})\n  }\n\n  render () {\n    if (this.state.loaded) {\n      return (\n        <dialog\n          className=\"dialog\"\n          open\n          onClick={this.props.handleShow.bind(this)}\n          style={{margin: 0}}\n        >\n          <div className=\"fullImageContainer\">\n          <img className=\"fullImage\"\n            src={process.env.PUBLIC_URL + this.props.imgFilePath}\n            alt={this.props.description}\n            onLoad={this.showLoaded}\n            />\n          </div>\n          <div className=\"caption\">\n            {this.props.description}{' - '}{this.props.year}\n          </div>\n        </dialog>\n      )\n    }\n    else{\n      return (\n        <dialog\n          className=\"dialog\"\n          open\n          onClick={this.props.handleShow.bind(this)}\n          style={{margin: 0}}\n        >\n          <div className=\"fullImageContainer\">\n          <img className=\"fullImage\"\n            src={process.env.PUBLIC_URL + this.props.imgFilePath}\n            alt={this.props.description}\n            onLoad={this.showLoaded}\n            />\n          </div>\n        </dialog>\n      )\n    }\n  }\n}\n\nFullImageModal.propTypes = {\n  handleShow: PropTypes.func.isRequired,\n  imgFilePath: PropTypes.string.isRequired,\n  fileName: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  year: PropTypes.string\n}\n\nexport default FullImageModal;\n","import React, {Component} from 'react';\nimport './styles/imageThumbnail.css';\nimport FullImageModal from './FullImageModal';\nimport PropTypes from 'prop-types';\n\n// class for image thumbnails in photo and map pages\nclass ImageThumbnail extends Component {\n\n  constructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tshow: false,\n      hover: false\n\t\t}\n\t}\n\n  handleShow = () => {\n    this.setState({ show: !this.state.show,\n      hover: false});\n  }\n\n  _handleStyle() {\n    return this.state.hover ? 'containerHover' : 'container'\n  }\n\n  _handleMouseOver = () => {\n    return !this.state.show ? this.setState({ hover: true }) : null;\n  }\n\n  _handleMouseLeave = () => {\n    this.setState({ hover: false });\n  }\n\n  render () {\n    let thumbnailFilePath = this.props.thumbnailFilePath;\n    return (\n      <div style={{\n          animation:\n          \"fadein \" +\n          (this.props.fadeInOrder < 18 ? (this.props.fadeInOrder+.9)*(.1).toString() :\n          this.props.fadeInOrder*(.01).toString())\n          + 's' ,\n          float: 'none',\n          width: '100%'}}>\n        {this.state.show && (\n            <FullImageModal\n              handleShow={this.handleShow}\n              imgFilePath={this.props.imgFilePath}\n              fileName={this.props.fileName}\n              description={this.props.photoData.description}\n              year={this.props.photoData.year}/>\n        )}\n          <img className=\"thumb\" alt=\"no thumbnail available\"\n            src={process.env.PUBLIC_URL + thumbnailFilePath}\n            style={{height: '100%',\n              width: '100%', verticalAlign:'middle',\n              opacity: (!this.state.hover) ? 1 : .7,\n              cursor: (this.state.hover) ? 'pointer' : 'default',\n              transition: '.1s'}}\n            onMouseOver={this._handleMouseOver}\n            onMouseLeave={this._handleMouseLeave}\n            onClick={this.handleShow}\n            />\n      </div>\n    )\n  }\n}\n\nImageThumbnail.propTypes = {\n  thumbnailFilePath: PropTypes.string.isRequired,\n  imgFilePath: PropTypes.string.isRequired,\n  fileName: PropTypes.string.isRequired,\n  photoData: PropTypes.object.isRequired\n}\n\nexport default ImageThumbnail;\n","import React, {PureComponent} from 'react';\nimport './styles/thumbnailContainerStyle.css';\nimport ImageThumbnail from '../generalComponents/ImageThumbnail';\nimport PropTypes from 'prop-types';\n\nclass MapThumbnailContainer extends PureComponent {\n\n  constructor(props) {\n\t\tsuper(props)\n    this.keyCount = 0 // used to generate unique div keys later\n\n\t}\n\n  displayHeaderText = () => (\n    this.props.currentPhotoSet === \"\" ? \"Select a Photo Set from Map\" :\n      this.props.currentPhotoSet\n    )\n\n  headerStyle = () => ( //TODO\n    this.props.isNight ? \"nightHeader\" : \"dayHeader\"\n  )\n\n  _createThumbnailsHelper(s) {\n    let formatted = s.replace(\" \", \"_\")\n    let dir1 = '/images/' + formatted + '/thumbnail/' + formatted;\n    let dir2 = '/images/' + formatted + '/full/' + formatted;\n    let num = this.props.photoSetData.numPhotos\n    let list = []\n    let order = {}\n    for (var i = 1; i <= num; i++) {\n      list.push(i);\n      order[i] = 0;\n    }\n    list.sort((a,b) => 0.5 - Math.random());\n    for (i = 1; i <= num; i++) {\n      order[list[i]] = i;\n    }\n    this.keyCount++;\n    return list.map((i) => (\n      <div key={this.keyCount.toString() + formatted + i.toString()}\n        className='thumbDiv'>\n       <ImageThumbnail\n         key={i}\n         thumbnailFilePath={dir1.concat(i.toString() + '.jpg')}\n         fadeInOrder={order[i]}\n         imgFilePath={dir2.concat(i.toString() + '.jpg')}\n         fileName={i.toString() + '.jpg'}\n         photoData={this.props.photoSetData.photos.filter(photo => (\n           photo.filename === formatted + i.toString() + '.jpg'))[0]}\n       />\n      </div>\n    ));\n  }\n\n  _createThumbnails() {\n      let photoset = this.props.currentPhotoSet;\n      return photoset === \"\" ? null : this._createThumbnailsHelper(photoset);\n  }\n\n  render() {\n    let thumbnails = this._createThumbnails();\n    return (\n      <div id=\"mapPageThumbnailContainer\">\n      <div className=\"headerContainer\">\n        <h1 className={this.headerStyle()}>\n          {this.displayHeaderText()}\n        </h1>\n      </div>\n      <div className='thumbnails' style={{overflowY: 'auto',\n        height: '84.6vh'\n        }}>\n        {thumbnails}\n      </div>\n      </div>\n    )\n  }\n}\n\n//PropTypes\nMapThumbnailContainer.propTypes = {\n  currentPhotoSet: PropTypes.string,\n  isNight: PropTypes.bool.isRequired,\n  photoSetData: PropTypes.object\n}\n\nexport default MapThumbnailContainer;\n","import React, {Component} from 'react';\nimport Map from './MapPageComponents/Map';\nimport MapThumbnailContainer from './MapPageComponents/MapThumbnailContainer';\nimport PropTypes from 'prop-types';\nimport './MapPageComponents/styles/toggleButton.css';\n\nclass MapPage extends Component {\n\n  state = {\n    isNight: true,\n    currentPhotoSet: \"\",\n    shouldToggleLoad: false\n  }\n\n  //Toggle Night/Day, resets Photo set\n  _toggleMapStyle = () => {\n    this.setState({\n      isNight: !this.state.isNight,\n      currentPhotoSet: \"\"});\n  }\n\n  _markerOnClick = (photoSetID) => {\n    return this.state.currentPhotoSet !== photoSetID ?\n      this.setState({ currentPhotoSet: photoSetID }) : null;\n  }\n\n  _googleMapLoaded = (yes) => {\n    this.setState({shouldToggleLoad: yes}); //only set to true if Google maps loaded\n  }\n\n  _loadToggle () {\n    if (this.state.shouldToggleLoad) {\n      return (\n        <button id=\"toggle\"\n          className={this._btnStyle()}\n          onClick={this._toggleMapStyle.bind(this)}>\n          {this._displayBtnText()}\n        </button>\n      )\n    }\n    return null;\n  }\n\n  _btnStyle () {\n    return (this.state.isNight ? \"nightBtn\" : \"dayBtn\")\n  }\n\n  _displayBtnText () {\n    return (this.state.isNight ? \"Switch to Day\" : \"Switch to Night\")\n  }\n\n  render () {\n    let currentPhotoSetData;\n    currentPhotoSetData = this.props.photoData.filter(photoSet =>\n      (photoSet.photoSetID === this.state.currentPhotoSet))[0]\n    return (\n      <div style={{float: 'left'}}>\n        {this._loadToggle()}\n        <Map isNight={this.state.isNight}\n          markerOnClick={this._markerOnClick}\n          selected={this.state.currentPhotoSet}\n          googleMapLoaded={this._googleMapLoaded}\n          />\n        <MapThumbnailContainer\n            currentPhotoSet={this.state.currentPhotoSet}\n            isNight={this.state.isNight}\n            photoSetData={currentPhotoSetData}/>\n        </div>\n    )\n  }\n}\n\nMapPage.propTypes = {\n  photoData: PropTypes.array.isRequired\n}\n\nexport default MapPage;\n","import React, {Component} from 'react';\nimport ImageThumbnail from '../generalComponents/ImageThumbnail';\nimport './styles/thumbnailContainerStyle.css';\nimport PropTypes from 'prop-types';\n\nclass PhotoPageThumbnailContainer extends Component {\n\n  constructor(props) {\n\t\tsuper(props)\n    this.keyCount = 0 // used to generate unique div keys later\n\t}\n\n  _createThumbnails() {\n    let photos = this.props.filteredPhotoData;\n    if (photos === []) { return this._handleNoPhotos();}\n    photos.sort((a,b) => 0.5 - Math.random());\n    return photos.map((photo) => this._createThumbnailHelper(photo, photos.indexOf(photo)))\n  }\n\n  _createThumbnailHelper(photo, i) {\n    let filename = photo.filename;\n    let dirName = filename.match(/[^1-9]*/i)[0]\n    let thumbPath = \"/images/\" + dirName + \"/thumbnail/\" + filename\n    let fullPath = \"/images/\" + dirName + \"/full/\" + filename\n    return (\n      <div key={this.keyCount.toString() + filename}\n        className=\"thumbnailDiv\">\n       <ImageThumbnail\n         key={i}\n         thumbnailFilePath={thumbPath}\n         fadeInOrder={i}\n         imgFilePath={fullPath}\n         fileName={filename}\n         photoData={photo}\n       />\n      </div>\n    )\n  }\n\n  _handleNoPhotos = () => {\n    return (\n      <div style={nothingHereStyle}>\n        Nothing here.\n      </div>\n    )\n  }\n\n  render () {\n    let thumbnails = this._createThumbnails();\n    if (this.props.filteredPhotoData.length > 0) {\n      return (\n        <div className=\"thumbnailContainer\">\n          <div className='thumbnails' style={{overflowY: 'auto',\n            height: '90vh'\n            }}>\n            {thumbnails}\n          </div>\n        </div>\n      )\n    }\n    else {\n      return this._handleNoPhotos()\n    }\n  }\n}\n\nconst nothingHereStyle = {\n  cursor: 'default',\n  color: 'white',\n  fontSize: '35px',\n  marginTop: '15%',\n  marginBottom: '25%',\n  textAlign: 'center',\n}\n\nPhotoPageThumbnailContainer.propTypes = {\n  filteredPhotoData: PropTypes.array.isRequired,\n}\n\nexport default PhotoPageThumbnailContainer;\n","import React, {Component} from 'react';\nimport PhotoPageThumbnailContainer from './PhotoPageComponents/PhotoPageThumbnailContainer';\n\nclass ImagePage extends Component {\n\n  state = {\n    medVal: \"noneMedium\",\n    colVal: \"noneColor\",\n    filtersApplied: false,\n    filters: {\n      bwOnly: false,\n      colorOnly: false,\n      analogOnly: false,\n      digitalOnly: false,\n      genres: {\n        street: false,\n        landscape: false,\n        cityscape: false,\n        cyberpunk: false,\n        composite: false\n      }\n    }\n  }\n\n  _applyFilter = (e) => {\n    let val = e.target.id\n    let currFilters = this.state.filters\n    if (val === \"analogOnly\") {\n      currFilters.analogOnly = true\n      currFilters.digitalOnly = false\n      this.setState({filters: currFilters, medVal: \"analogOnly\"})\n    }\n    if (val === \"digitalOnly\") {\n      currFilters.analogOnly = false\n      currFilters.digitalOnly = true\n      this.setState({filters: currFilters, medVal: \"digitalOnly\"})\n    }\n    if (val === \"noneMedium\") {\n      currFilters.analogOnly = false\n      currFilters.digitalOnly = false\n      this.setState({filters: currFilters, medVal: \"noneMedium\"})\n    }\n    if (val === \"noneColor\") {\n      currFilters.colorOnly = false\n      currFilters.bwOnly = false\n      this.setState({filters: currFilters, colVal: \"noneColor\"})\n    }\n    if (val === \"colorOnly\") {\n      currFilters.colorOnly = true\n      currFilters.bwOnly = false\n      this.setState({filters: currFilters, colVal: \"colorOnly\"})\n    }\n    if (val === \"bwOnly\") {\n      currFilters.colorOnly = false\n      currFilters.bwOnly = true\n      this.setState({filters: currFilters, colVal: \"bwOnly\"})\n    }\n    if (val === \"cityscape\") {\n      currFilters.genres.cityscape = !currFilters.genres.cityscape\n      this.setState({filters: currFilters})\n    }\n    if (val === \"composite\") {\n      currFilters.genres.composite = !currFilters.genres.composite\n      this.setState({filters: currFilters})\n    }\n    if (val === \"landscape\") {\n      currFilters.genres.landscape = !currFilters.genres.landscape\n      this.setState({filters: currFilters})\n    }\n    if (val === \"street\") {\n      currFilters.genres.street = !currFilters.genres.street\n      this.setState({filters: currFilters})\n    }\n    if (val === \"cyberpunk\") {\n      currFilters.genres.cyberpunk = !currFilters.genres.cyberpunk\n      this.setState({filters: currFilters})\n    }\n  }\n\n  _clearFilters = () => {\n      this.setState({ filtersApplied: false,\n        medVal: \"noneMedium\",\n        colVal: \"noneColor\",\n        filters: {\n          bwOnly: false,\n          colorOnly: false,\n          analogOnly: false,\n          digitalOnly: false,\n          genres: {\n            street: false,\n            landscape: false,\n            cityscape: false,\n            cyberpunk: false,\n            composite: false\n          }\n        }\n      })\n\n  }\n\n  _filterPhotoData = () => {\n    let data = this.props.photoData;\n    let filteredPhotos = [];\n    for (var i = 0; i < data.length; i++) {\n      let photoSet = data[i]\n      for (var j = 0; j < photoSet.photos.length; j++) {\n        var photo = photoSet.photos[j]\n        var isValid = true;\n        for (var g in this.state.filters.genres){\n          if (this.state.filters.genres[g] &&\n            this.state.filters.genres[g] !== photo.genre[g]) {\n            isValid = false;\n          }\n        }\n        if (this.state.filters.analogOnly && (!photo.analog)) {\n          isValid = false;\n        }\n        if (this.state.filters.digitalOnly && (photo.analog)) {\n          isValid = false;\n        }\n        if (this.state.filters.bwOnly && (!photo.bw)) {\n          isValid = false;\n        }\n        if (this.state.filters.colorOnly && (photo.bw)) {\n          isValid = false;\n        }\n        if (isValid) {\n           filteredPhotos.push(photo)\n         }\n      }\n    }\n    return filteredPhotos;\n  }\n\n  _checkFiltersApplied = () => {\n    let filtered = false;\n    let filters = this.state.filters\n    Object.keys(filters).forEach((filter) => {\n      if (filter === 'genres') {\n        Object.keys(filters.genres).forEach((g) => {\n          if (filters.genres[g] === true){\n            filtered = true;\n          }\n        })\n      }\n      else {\n        if (filters[filter]===true) {\n          filtered = true;\n        }\n      }\n    })\n    return filtered;\n  }\n\n\n  render () {\n    let data = this._filterPhotoData()\n    return (\n      <>\n        <PhotoPageThumbnailContainer filteredPhotoData={data}/>\n      </>\n    );\n  }\n}\n\nexport default ImagePage;\n","import React, {Component} from 'react';\n\nclass RenderPage extends Component {\n  render () {\n    return (\n      <div style={nothingHereStyle}>\n        Nothing here yet. Come back later after I get good at Blender :)\n      </div>\n    );\n  }\n}\n\nconst nothingHereStyle = {\n  cursor: 'default',\n  color: 'white',\n  fontSize: '35px',\n  marginTop: '15%',\n  marginBottom: '25%',\n  textAlign: 'center',\n\n}\n\nexport default RenderPage;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/VideoPageStyle.css';\n\n\nclass VideoPlayer extends Component {\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.filename !== this.props.filename){\n      return true;\n    }\n    return false\n  }\n\n  render () {\n    return (\n      <div style={{height: \"90vh\", width: '70%', position:'relative', float: 'left'}}>\n        <video key={this.props.filename}\n          width=\"900\" controls loop autoPlay={true} muted\n          controlsList=\"nodownload\" className={\"largePlayer\"}\n          >\n          <source src={process.env.PUBLIC_URL + \"/video/\" + this.props.filename} type=\"video/mp4\"/>\n        </video>\n        <div className=\"description\">{this.props.fileData.description}</div>\n      </div>\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n    filename: PropTypes.string.isRequired,\n    fileData: PropTypes.object.isRequired\n}\n\nexport default VideoPlayer;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoThumbnail extends Component {\n\n  constructor(props) {\n    super(props)\n    this.player = React.createRef()\n  }\n\n  _play = () => {\n    this.player.current.play()\n  }\n\n  _pause = () => {\n    this.player.current.pause()\n  }\n\n  render () {\n    return (\n      <div id={this.props.full} className=\"thumbnailCont\"\n        onMouseEnter={this._play} onMouseLeave={this._pause}\n        onClick={this.props.handleSelection.bind(this, this.props.full)}>\n        <video width=\"200\" controls={false} loop muted\n           className={\"thumbPlayer\"} ref={this.player}\n          >\n          <source src={process.env.PUBLIC_URL + \"/video/\" + this.props.filename} type=\"video/mp4\"/>\n        </video>\n        <div className=\"thumbDescription\">{this.props.description}</div>\n      </div>\n    );\n  }\n}\n\nVideoThumbnail.propTypes = {\n  full: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  filename: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired\n}\n\nexport default VideoThumbnail;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport VideoThumbnail from './VideoThumbnail';\n\nclass VideoThumbnailContainer extends Component {\n\n  _createThumbnails() {\n    return this.props.videoData.map((video) => {\n      let j = Object.keys(video)[0].match(/[^1-9]*/i)[0]\n      let i = j + '720.mp4'\n\n      return (\n        <VideoThumbnail key={i} description={video[j+'1080.mp4'].description} filename={i}\n          handleSelection={this.props.handleSelection}\n          full={j + '1080.mp4'}/>\n      )\n    })\n  }\n\n  render () {\n    return (\n      <div style={{position: 'relative', float: 'right', height: '90vh', width: '30%',\n      overflowY: 'scroll'}}>\n        {this._createThumbnails()}\n      </div>\n    );\n  }\n}\n\nVideoThumbnailContainer.propTypes = {\n  videoData: PropTypes.array.isRequired,\n  handleSelection: PropTypes.func.isRequired\n}\n\nexport default VideoThumbnailContainer;\n","import React, {Component} from 'react';\nimport VideoPlayer from './VideoPageComponents/VideoPlayer';\nimport VideoThumbnailContainer from './VideoPageComponents/VideoThumbnailContainer';\n\nclass VideoPage extends Component {\n\n  state = {\n    selected: \"fuji1080.mp4\"\n  }\n\n  _handleSelection = (id) => {\n    let newSelection = id;\n    this.setState({selected: newSelection});\n  }\n\n  _parseVideoData = () => {\n    let data = []\n    Object.keys(this.props.videoData).forEach((filename) => {\n      if (filename !== this.state.selected) {\n        var obj = {};\n        obj[filename] = this.props.videoData[filename]\n        data.push(obj)\n      }\n    })\n    return data;\n  }\n\n  render () {\n    return (\n      <>\n      <VideoPlayer filename={this.state.selected}\n        fileData={this.props.videoData[this.state.selected]}/>\n      <VideoThumbnailContainer videoData={this._parseVideoData()}\n        handleSelection={this._handleSelection}/>\n      </>\n    );\n  }\n}\n\nexport default VideoPage;\n","import React, {Component} from 'react';\n\nclass AboutPage extends Component {\n  render () {\n    return (\n      <div style={nothingHereStyle}>\n        Nothing here yet :)\n      </div>\n    );\n  }\n}\n\nconst nothingHereStyle = {\n  cursor: 'default',\n  color: 'white',\n  fontSize: '35px',\n  marginTop: '15%',\n  marginBottom: '25%',\n  textAlign: 'center',\n}\n\nexport default AboutPage;\n","import React, {Component} from \"react\";\nimport { Link } from 'react-router-dom';\nimport './layoutStyles/Header.css';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n\n  _handleLinkCSS(pageName: String) {\n    if (this.props.currentPage === pageName) {\n      return 'currentPage'\n    }\n    else {\n      return 'headerLink'\n    }\n  }\n\n  _createHeaderLinks() {\n    let links = [\"/photo\", \"/video\",\n      \"/render\", \"/map\", \"/about\"];\n    return links.map((link) => {return link !== this.props.currentPage ? (\n        <Link key={link} to={link}>\n          <div id={link}\n              className={this._handleLinkCSS(link)}>\n            {this._linkText(link)}\n          </div>\n        </Link>\n      ) : (\n        <div key={link} id={link}\n          className={this._handleLinkCSS(link)}>\n          {this._linkText(link)}\n        </div>\n      )\n    })\n  }\n\n  _linkText(s: String) {\n    return s[1].toUpperCase() + s.slice(2);\n  }\n\n  render () {\n    return (\n      <div style={headerStyle}>\n        {this._createHeaderLinks()}\n      </div>\n    )\n  }\n}\n\nconst headerStyle = {\n  height: '5%',\n  width: '100%',\n  margin: 'auto',\n  background: 'black',\n  textAlign: 'left',\n  padding: '0px',\n  display: 'inline-block'\n}\n\nHeader.propTypes = {\n  currentPage: PropTypes.string\n}\n\n\nexport default Header;\n","import React, {Component} from \"react\";\nimport './layoutStyles/Footer.css';\nimport PropTypes from 'prop-types';\n\nclass Footer extends Component {\n  render () {\n    return (\n      <footer>\n        <p>Copyright © {this.props.year}, Nicholas Ramkissoon</p>\n      </footer>\n    )\n  }\n}\n\nFooter.propTypes = {\n  year: PropTypes.number.isRequired\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport {Route, Redirect, HashRouter} from 'react-router-dom';\nimport MapPage from './components/MapPage';\nimport PhotoPage from './components/PhotoPage';\nimport RenderPage from './components/RenderPage';\nimport VideoPage from './components/VideoPage';\nimport AboutPage from './components/AboutPage';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport './App.css';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n    <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <Route exact path=\"/\" render={() => (\n              <Redirect to=\"/photo\"/> //No landing page yet\n            )}/>\n            <Route exact path={'/map'} render={() => (\n              <>\n              <Header currentPage={'/map'}/>\n              <MapPage photoData={photoData}/>\n              </>\n              )} />\n            <Route exact path={'/photo'} render={() => (\n              <>\n              <Header currentPage={'/photo'}/>\n              <PhotoPage photoData={photoData}\n                         year={year}/>\n              </>\n              )} />\n            <Route exact path={'/render'} render={() => (\n              <>\n              <Header currentPage={'/render'}/>\n              <RenderPage renderData={renderData}\n                         year={year}/>\n              </>\n              )} />\n            <Route exact path={'/video'} render={() => (\n              <>\n              <Header currentPage={'/video'}/>\n              <VideoPage videoData={videoData}\n                         year={year}/>\n              </>\n              )} />\n            <Route exact path={'/about'} render={() => (\n              <>\n              <Header currentPage={'/about'}/>\n              <AboutPage />\n              </>\n              )} />\n          <Footer year={year}/>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n\nvar d = new Date();\nvar year = d.getFullYear();\n\nconst photoData = require('./json/photoData.json');\nconst renderData = require('./json/renderData.json');\nconst videoData = require('./json/videoData.json');\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}